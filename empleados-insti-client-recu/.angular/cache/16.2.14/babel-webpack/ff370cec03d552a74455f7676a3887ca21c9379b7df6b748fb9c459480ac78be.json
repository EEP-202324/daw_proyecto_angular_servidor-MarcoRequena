{"ast":null,"code":"export class InMemoryDataService {\n  createDb() {\n    const aulas = [{\n      id: 11,\n      name: 'Dr Nice'\n    }, {\n      id: 12,\n      name: 'Narco'\n    }, {\n      id: 13,\n      name: 'Bombasto'\n    }, {\n      id: 14,\n      name: 'Celeritas'\n    }, {\n      id: 15,\n      name: 'Magneta'\n    }, {\n      id: 16,\n      name: 'RubberMan'\n    }, {\n      id: 17,\n      name: 'Dynama'\n    }, {\n      id: 18,\n      name: 'Dr IQ'\n    }, {\n      id: 19,\n      name: 'Magma'\n    }, {\n      id: 20,\n      name: 'Tornado'\n    }];\n    return {\n      aulas\n    };\n  }\n  // Overrides the genId method to ensure that a aula always has an id.\n  // If the aulas array is empty,\n  // the method below returns the initial number (11).\n  // if the aulas array is not empty, the method below returns the highest\n  // aula id + 1.\n  genId(aulas) {\n    return aulas.length > 0 ? Math.max(...aulas.map(aula => aula.id)) + 1 : 11;\n  }\n}","map":{"version":3,"names":["InMemoryDataService","createDb","aulas","id","name","genId","length","Math","max","map","aula"],"sources":["C:\\Users\\yo\\Desktop\\Proyecto final dwes\\daw_proyecto_angular_servidor-MarcoRequena\\Instituto\\src\\app\\in-memory-data.service.ts"],"sourcesContent":["import { InMemoryDbService } from 'angular-in-memory-web-api';\nimport { Aula } from './aula';\n\nexport class InMemoryDataService implements InMemoryDbService {\n  createDb() {\n    const aulas = [\n      { id: 11, name: 'Dr Nice' },\n      { id: 12, name: 'Narco' },\n      { id: 13, name: 'Bombasto' },\n      { id: 14, name: 'Celeritas' },\n      { id: 15, name: 'Magneta' },\n      { id: 16, name: 'RubberMan' },\n      { id: 17, name: 'Dynama' },\n      { id: 18, name: 'Dr IQ' },\n      { id: 19, name: 'Magma' },\n      { id: 20, name: 'Tornado' }\n    ];\n    return { aulas };\n  }\n\n\n  // Overrides the genId method to ensure that a aula always has an id.\n  // If the aulas array is empty,\n  // the method below returns the initial number (11).\n  // if the aulas array is not empty, the method below returns the highest\n  // aula id + 1.\n\n  genId(aulas: Aula[]): number {\n    return aulas.length > 0 ? Math.max(...aulas.map(aula => aula.id)) + 1 : 11;\n  }\n}\n\n\n  "],"mappings":"AAGA,OAAM,MAAOA,mBAAmB;EAC9BC,QAAQA,CAAA;IACN,MAAMC,KAAK,GAAG,CACZ;MAAEC,EAAE,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAS,CAAE,EAC3B;MAAED,EAAE,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAO,CAAE,EACzB;MAAED,EAAE,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAU,CAAE,EAC5B;MAAED,EAAE,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAW,CAAE,EAC7B;MAAED,EAAE,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAS,CAAE,EAC3B;MAAED,EAAE,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAW,CAAE,EAC7B;MAAED,EAAE,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAQ,CAAE,EAC1B;MAAED,EAAE,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAO,CAAE,EACzB;MAAED,EAAE,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAO,CAAE,EACzB;MAAED,EAAE,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAS,CAAE,CAC5B;IACD,OAAO;MAAEF;IAAK,CAAE;EAClB;EAGA;EACA;EACA;EACA;EACA;EAEAG,KAAKA,CAACH,KAAa;IACjB,OAAOA,KAAK,CAACI,MAAM,GAAG,CAAC,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAGN,KAAK,CAACO,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACP,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE;EAC5E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}