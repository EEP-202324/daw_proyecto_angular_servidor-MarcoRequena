{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class InMemoryDataService {\n  createDb() {\n    const aulas = [{\n      id: 12,\n      name: '3º A'\n    }, {\n      id: 13,\n      name: '3º C'\n    }, {\n      id: 14,\n      name: '3º D'\n    }, {\n      id: 15,\n      name: '2º A'\n    }, {\n      id: 16,\n      name: '2º B'\n    }, {\n      id: 17,\n      name: '2º C'\n    }, {\n      id: 18,\n      name: '2º D'\n    }, {\n      id: 19,\n      name: '1º A'\n    }, {\n      id: 20,\n      name: '1º B'\n    }];\n    return {\n      aulas\n    };\n  }\n  // Overrides the genId method to ensure that a aula always has an id.\n  // If the aulas array is empty,\n  // the method below returns the initial number (11).\n  // if the aulas array is not empty, the method below returns the highest\n  // aula id + 1.\n  genId(aulas) {\n    return aulas.length > 0 ? Math.max(...aulas.map(aula => aula.id)) + 1 : 11;\n  }\n  static #_ = this.ɵfac = function InMemoryDataService_Factory(t) {\n    return new (t || InMemoryDataService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: InMemoryDataService,\n    factory: InMemoryDataService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["InMemoryDataService","createDb","aulas","id","name","genId","length","Math","max","map","aula","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\yo\\Desktop\\Proyecto final dwes\\daw_proyecto_angular_servidor-MarcoRequena\\Instituto\\src\\app\\in-memory-data.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { InMemoryDbService } from 'angular-in-memory-web-api';\nimport { Aula } from './aula';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class InMemoryDataService implements InMemoryDbService {\n  createDb() {\n    const aulas = [\n  { id: 12, name: '3º A' },\n  { id: 13, name: '3º C' },\n  { id: 14, name: '3º D' },\n  { id: 15, name: '2º A' },\n  { id: 16, name: '2º B' },\n  { id: 17, name: '2º C' },\n  { id: 18, name: '2º D' },\n  { id: 19, name: '1º A' },\n  { id: 20, name: '1º B' }\n  ];\n    return {aulas};\n  }\n\n  // Overrides the genId method to ensure that a aula always has an id.\n  // If the aulas array is empty,\n  // the method below returns the initial number (11).\n  // if the aulas array is not empty, the method below returns the highest\n  // aula id + 1.\n  genId(aulas: Aula[]): number {\n    return aulas.length > 0 ? Math.max(...aulas.map(aula => aula.id)) + 1 : 11;\n  }\n}"],"mappings":";AAOA,OAAM,MAAOA,mBAAmB;EAC9BC,QAAQA,CAAA;IACN,MAAMC,KAAK,GAAG,CAChB;MAAEC,EAAE,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAM,CAAE,EACxB;MAAED,EAAE,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAM,CAAE,EACxB;MAAED,EAAE,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAM,CAAE,EACxB;MAAED,EAAE,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAM,CAAE,EACxB;MAAED,EAAE,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAM,CAAE,EACxB;MAAED,EAAE,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAM,CAAE,EACxB;MAAED,EAAE,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAM,CAAE,EACxB;MAAED,EAAE,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAM,CAAE,EACxB;MAAED,EAAE,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAM,CAAE,CACvB;IACC,OAAO;MAACF;IAAK,CAAC;EAChB;EAEA;EACA;EACA;EACA;EACA;EACAG,KAAKA,CAACH,KAAa;IACjB,OAAOA,KAAK,CAACI,MAAM,GAAG,CAAC,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAGN,KAAK,CAACO,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACP,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE;EAC5E;EAAC,QAAAQ,CAAA,G;qBAvBUX,mBAAmB;EAAA;EAAA,QAAAY,EAAA,G;WAAnBZ,mBAAmB;IAAAa,OAAA,EAAnBb,mBAAmB,CAAAc,IAAA;IAAAC,UAAA,EAFlB;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}