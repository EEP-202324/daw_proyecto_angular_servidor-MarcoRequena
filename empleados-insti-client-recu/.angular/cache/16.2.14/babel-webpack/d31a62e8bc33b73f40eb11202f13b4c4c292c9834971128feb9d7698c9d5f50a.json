{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class EmpleadoService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    //Esta URL obtiene el listado de todos los empleados en el backend\n    this.baseURL = \"http://localhost:8080/api/v1/empleados\";\n  }\n  //este metodo nos sirve para obtener los empleados\n  obtenerListaDeEmpleados() {\n    return this.httpClient.get(`${this.baseURL}`);\n  }\n  //este metodo nos sirve para registrar un empleado\n  registrarEmpleado(empleado) {\n    return this.httpClient.post(`${this.baseURL}`, empleado);\n  }\n  //este metodo sirve para actualizar el empleado\n  actualizarEmpleado(id, empleado) {\n    return this.httpClient.put(`${this.baseURL}/${id}`, empleado);\n  }\n  //este metodo sirve para obtener o buscar un empleado\n  obtenerEmpleadoPorId(id) {\n    return this.httpClient.get(`${this.baseURL}/${id}`);\n  }\n  eliminarEmpleado(id) {\n    return this.httpClient.delete(`${this.baseURL}/${id}`);\n  }\n  static #_ = this.ɵfac = function EmpleadoService_Factory(t) {\n    return new (t || EmpleadoService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: EmpleadoService,\n    factory: EmpleadoService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["EmpleadoService","constructor","httpClient","baseURL","obtenerListaDeEmpleados","get","registrarEmpleado","empleado","post","actualizarEmpleado","id","put","obtenerEmpleadoPorId","eliminarEmpleado","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\yo\\Desktop\\Proyecto final dwes\\proyectoRecuperacion_angular_spring_MarcoRequena\\empleados-insti-client-recu\\src\\app\\empleado.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Empleado } from './empleado';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmpleadoService {\n\n  //Esta URL obtiene el listado de todos los empleados en el backend\n  private baseURL = \"http://localhost:8080/api/v1/empleados\";\n\n  constructor(private httpClient : HttpClient) { }\n\n  //este metodo nos sirve para obtener los empleados\n  obtenerListaDeEmpleados():Observable<Empleado[]>{\n    return this.httpClient.get<Empleado[]>(`${this.baseURL}`);\n  }\n\n  //este metodo nos sirve para registrar un empleado\n  registrarEmpleado(empleado:Empleado) : Observable<Object>{\n    return this.httpClient.post(`${this.baseURL}`,empleado);\n  }\n\n  //este metodo sirve para actualizar el empleado\n  actualizarEmpleado(id:number,empleado:Empleado) : Observable<Object>{\n    return this.httpClient.put(`${this.baseURL}/${id}`,empleado);\n  }\n\n  //este metodo sirve para obtener o buscar un empleado\n  obtenerEmpleadoPorId(id:number):Observable<Empleado>{\n    return this.httpClient.get<Empleado>(`${this.baseURL}/${id}`);\n  }\n\n  eliminarEmpleado(id:number): Observable<Object>{\n    return this.httpClient.delete(`${this.baseURL}/${id}`);\n  }\n}\n"],"mappings":";;AAQA,OAAM,MAAOA,eAAe;EAK1BC,YAAoBC,UAAuB;IAAvB,KAAAA,UAAU,GAAVA,UAAU;IAH9B;IACQ,KAAAC,OAAO,GAAG,wCAAwC;EAEX;EAE/C;EACAC,uBAAuBA,CAAA;IACrB,OAAO,IAAI,CAACF,UAAU,CAACG,GAAG,CAAa,GAAG,IAAI,CAACF,OAAO,EAAE,CAAC;EAC3D;EAEA;EACAG,iBAAiBA,CAACC,QAAiB;IACjC,OAAO,IAAI,CAACL,UAAU,CAACM,IAAI,CAAC,GAAG,IAAI,CAACL,OAAO,EAAE,EAACI,QAAQ,CAAC;EACzD;EAEA;EACAE,kBAAkBA,CAACC,EAAS,EAACH,QAAiB;IAC5C,OAAO,IAAI,CAACL,UAAU,CAACS,GAAG,CAAC,GAAG,IAAI,CAACR,OAAO,IAAIO,EAAE,EAAE,EAACH,QAAQ,CAAC;EAC9D;EAEA;EACAK,oBAAoBA,CAACF,EAAS;IAC5B,OAAO,IAAI,CAACR,UAAU,CAACG,GAAG,CAAW,GAAG,IAAI,CAACF,OAAO,IAAIO,EAAE,EAAE,CAAC;EAC/D;EAEAG,gBAAgBA,CAACH,EAAS;IACxB,OAAO,IAAI,CAACR,UAAU,CAACY,MAAM,CAAC,GAAG,IAAI,CAACX,OAAO,IAAIO,EAAE,EAAE,CAAC;EACxD;EAAC,QAAAK,CAAA,G;qBA7BUf,eAAe,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAfpB,eAAe;IAAAqB,OAAA,EAAfrB,eAAe,CAAAsB,IAAA;IAAAC,UAAA,EAFd;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}